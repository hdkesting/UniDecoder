<Page x:Class="UniDecoderWpf.Views.ShowCharacterPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Behaviors="using:Template10.Behaviors"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:UniDecoderWpf.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:UniDecoderWpf.ViewModels" 
      xmlns:support="using:UniDecoderWpf.Support"
      mc:Ignorable="d">

    <Page.DataContext>
        <vm:ShowCharacterPageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                        <Setter Target="stateTextBox.Text" Value="Narrow Visual State" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                        <Setter Target="stateTextBox.Text" Value="Normal Visual State" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                        <Setter Target="stateTextBox.Text" Value="Wide Visual State" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <controls:PageHeader x:Name="pageHeader" Text="Show characters in text"
                RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"
                RelativePanel.AlignTopWithPanel="True" >

            <!--  secondary commands  -->
            <controls:PageHeader.SecondaryCommands>
                <AppBarButton Click="{x:Bind ViewModel.GotoSettings}" Label="Settings" />
                <AppBarButton Click="{x:Bind ViewModel.GotoPrivacy}" Label="Privacy" />
                <AppBarButton Click="{x:Bind ViewModel.GotoAbout}" Label="About" />
            </controls:PageHeader.SecondaryCommands>

        </controls:PageHeader>

        <TextBox x:Name="StringValue" Text="{x:Bind ViewModel.Value, Mode=TwoWay}" Header="Show characters in this text:" PlaceholderText="Type a text to show it's characters"
                    TextChanged="{x:Bind ViewModel.StringValue_TextChanged}" FontSize="20"
                    RelativePanel.Below="pageHeader" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior>
                    <Behaviors:FocusAction />
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </TextBox>

        <RichTextBlock x:Name="ColoredText" support:TextBlockExtensions.BindableTextRanges="{x:Bind ViewModel.Fragments,Mode=OneWay}" 
                   FontSize="20"
                   RelativePanel.Below="StringValue" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True" >
            <RichTextBlock.TextHighlighters>
                <TextHighlighter Background="Yellow" />
            </RichTextBlock.TextHighlighters>
            <Paragraph>
                <Run Text="{x:Bind ViewModel.Value, Mode=OneWay}"/>
            </Paragraph>
        </RichTextBlock>

        <local:CharacterGrid Characters="{x:Bind Path=ViewModel.List}" 
                             RelativePanel.Below="ColoredText" 
                RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"/>

    </RelativePanel>
</Page>
