@using UniDecoderBlazorServer.Support
@if (Characters is not null && Characters.Any())
{
    @if (!string.IsNullOrEmpty(CountMessageFormat))
    {
        <p>@string.Format(CountMessageFormat, @Characters.Count)</p>
    }
    <section>
        <InfiniteScrolling ItemsProvider=GetItems>
            <ItemTemplate Context="item">
                <CharData Character=item/>
            </ItemTemplate>
            <LoadingTemplate>
                <div><span class="oi oi-reload spin"></span> Loading</div>
            </LoadingTemplate>
        </InfiniteScrolling>
    </section>
}
else
{
    <p>@EmptyListMessage</p>
}
@code {
    [Parameter]
    public List<CodepointInfo>? Characters{ get; set; }

    [Parameter]
    public string? EmptyListMessage{ get; set; }

    [Parameter]
    public string? CountMessageFormat { get; set; }

    async Task<IEnumerable<CodepointInfo>> GetItems(InfiniteScrollingItemsProviderRequest request)
    {
        await Task.CompletedTask;
        return (Characters ?? Enumerable.Empty<CodepointInfo>())
                .Skip(request.StartIndex)
                .Take(50);
    }
}
